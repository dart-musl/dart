From 6665c494f8c88cca08c25d05c5891ddbce5ea34d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E3=81=AA=E3=81=A4=E3=81=8D?= <i@ntk.me>
Date: Sat, 14 Jan 2023 02:59:30 +0000
Subject: [PATCH 5/6] musl-reinterpret-null

---
 runtime/vm/dart_api_impl.cc      |  4 ++--
 runtime/vm/heap/freelist_test.cc |  2 +-
 runtime/vm/isolate_test.cc       |  2 +-
 runtime/vm/log_test.cc           | 14 +++++++-------
 runtime/vm/symbols.cc            |  2 +-
 runtime/vm/timeline.cc           |  2 +-
 6 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/runtime/vm/dart_api_impl.cc b/runtime/vm/dart_api_impl.cc
index adac74b1..64656d2b 100644
--- a/runtime/vm/dart_api_impl.cc
+++ b/runtime/vm/dart_api_impl.cc
@@ -1282,7 +1282,7 @@ static Dart_Isolate CreateIsolate(IsolateGroup* group,
     if (error != NULL) {
       *error = Utils::StrDup("Isolate creation failed");
     }
-    return reinterpret_cast<Dart_Isolate>(NULL);
+    return reinterpret_cast<Dart_Isolate>(0);
   }
 
   Thread* T = Thread::Current();
@@ -1326,7 +1326,7 @@ static Dart_Isolate CreateIsolate(IsolateGroup* group,
   }
 
   Dart::ShutdownIsolate();
-  return reinterpret_cast<Dart_Isolate>(NULL);
+  return reinterpret_cast<Dart_Isolate>(0);
 }
 
 static bool IsServiceOrKernelIsolateName(const char* name) {
diff --git a/runtime/vm/heap/freelist_test.cc b/runtime/vm/heap/freelist_test.cc
index 6a0c19c8..32e624b4 100644
--- a/runtime/vm/heap/freelist_test.cc
+++ b/runtime/vm/heap/freelist_test.cc
@@ -151,7 +151,7 @@ TEST_CASE(FreeListProtectedVariableSizeObjects) {
   const intptr_t kMinSize = 2 * kWordSize;
   uword* objects = new uword[kBlobSize / kMinSize];
   for (intptr_t i = 0; i < kBlobSize / kMinSize; ++i) {
-    objects[i] = static_cast<uword>(NULL);
+    objects[i] = static_cast<uword>(0);
   }
 
   VirtualMemory* blob = VirtualMemory::Allocate(
diff --git a/runtime/vm/isolate_test.cc b/runtime/vm/isolate_test.cc
index dd1c9197..9f97f2fc 100644
--- a/runtime/vm/isolate_test.cc
+++ b/runtime/vm/isolate_test.cc
@@ -17,7 +17,7 @@ VM_UNIT_TEST_CASE(IsolateCurrent) {
   Dart_Isolate isolate = TestCase::CreateTestIsolate();
   EXPECT_EQ(isolate, Dart_CurrentIsolate());
   Dart_ShutdownIsolate();
-  EXPECT_EQ(reinterpret_cast<Dart_Isolate>(NULL), Dart_CurrentIsolate());
+  EXPECT_EQ(reinterpret_cast<Dart_Isolate>(0), Dart_CurrentIsolate());
 }
 
 // Test to ensure that an exception is thrown if no isolate creation
diff --git a/runtime/vm/log_test.cc b/runtime/vm/log_test.cc
index 86c2bf83..5ffcfdae 100644
--- a/runtime/vm/log_test.cc
+++ b/runtime/vm/log_test.cc
@@ -62,7 +62,7 @@ TEST_CASE(Log_Basic) {
   test_output_ = NULL;
   Log* log = new Log(TestPrinter);
 
-  EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+  EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
   log->Print("Hello %s", "World");
   EXPECT_STREQ("Hello World", test_output_);
 
@@ -74,23 +74,23 @@ TEST_CASE(Log_Block) {
   test_output_ = NULL;
   Log* log = new Log(TestPrinter);
 
-  EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+  EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
   {
     LogBlock ba(thread, log);
     log->Print("APPLE");
-    EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+    EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
     {
       LogBlock ba(thread, log);
       log->Print("BANANA");
-      EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+      EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
     }
-    EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+    EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
     {
       LogBlock ba(thread, log);
       log->Print("PEAR");
-      EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+      EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
     }
-    EXPECT_EQ(reinterpret_cast<const char*>(NULL), test_output_);
+    EXPECT_EQ(reinterpret_cast<const char*>(0), test_output_);
   }
   EXPECT_STREQ("APPLEBANANAPEAR", test_output_);
   delete log;
diff --git a/runtime/vm/symbols.cc b/runtime/vm/symbols.cc
index a60edfaa..f91ba8b9 100644
--- a/runtime/vm/symbols.cc
+++ b/runtime/vm/symbols.cc
@@ -198,7 +198,7 @@ StringPtr Symbols::FromUTF8(Thread* thread,
                             const uint8_t* utf8_array,
                             intptr_t array_len) {
   if (array_len == 0 || utf8_array == NULL) {
-    return FromLatin1(thread, reinterpret_cast<uint8_t*>(NULL), 0);
+    return FromLatin1(thread, reinterpret_cast<uint8_t*>(0), 0);
   }
   Utf8::Type type;
   intptr_t len = Utf8::CodeUnitCount(utf8_array, array_len, &type);
diff --git a/runtime/vm/timeline.cc b/runtime/vm/timeline.cc
index 086b86b1..2551488d 100644
--- a/runtime/vm/timeline.cc
+++ b/runtime/vm/timeline.cc
@@ -816,7 +816,7 @@ TimelineEvent* TimelineStream::StartEvent() {
 
 TimelineEventScope::TimelineEventScope(TimelineStream* stream,
                                        const char* label)
-    : StackResource(reinterpret_cast<Thread*>(NULL)),
+    : StackResource(reinterpret_cast<Thread*>(0)),
       stream_(stream),
       label_(label),
       enabled_(false) {
-- 
2.39.0

